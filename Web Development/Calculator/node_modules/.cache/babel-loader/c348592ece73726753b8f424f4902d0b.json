{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currrentOperand: \"\",\n  prevOperand: \"\",\n  operation: \"\"\n};\nexport const digitSlice = createSlice({\n  name: \"digits\",\n  initialState,\n  reducers: {\n    addDigit: (state, action) => {\n      if (state.currrentOperand === '0' && action.payload === '0') {\n        return state;\n      }\n\n      if (state.currrentOperand.includes('.') && action.payload === '.') {\n        return state;\n      }\n\n      return {\n        currentOperand: `${state.value.currrentOperand || \"\"}${action.payload}`\n      };\n    },\n    clearDigit: () => {\n      return {};\n    },\n    removeLastDigit: state => {\n      return {\n        currentOperand: `${state.value.currrentOperand.slice(0, -1)}`\n      };\n    }\n  }\n});\nexport const {\n  addDigit,\n  clearDigit,\n  removeLastDigit\n} = digitSlice.actions;\nexport default digitSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currrentOperand","prevOperand","operation","digitSlice","name","reducers","addDigit","state","action","payload","includes","currentOperand","value","clearDigit","removeLastDigit","slice","actions","reducer"],"sources":["C:/Users/Fomonyuytar/Desktop/learning/calculator/src/store/features/digitSlice.ts"],"sourcesContent":["import { createSlice ,PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\ninterface digit{\r\n    currrentOperand:string;\r\n        prevOperand: string;\r\n        operation:string;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState : digit= {\r\n  \r\n    \r\n        currrentOperand:\"\",\r\n        prevOperand:\"\",\r\n        operation:\"\"\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const digitSlice =  createSlice({\r\n\r\n    name :\"digits\",\r\n    initialState,\r\n\r\n    reducers:{\r\n\r\n        addDigit:(state , action:PayloadAction<string>)=>{\r\n            if(state.currrentOperand === '0'&& action.payload ==='0'){\r\n                return state;\r\n\r\n            }\r\n            if(state.currrentOperand.includes('.')  && action.payload ==='.'){\r\n                return state;\r\n\r\n            }\r\n        return  {\r\n                currentOperand:`${state.value.currrentOperand || \"\" }${action.payload}`\r\n            }\r\n        },\r\n\r\n        clearDigit:()=>{\r\n             \r\n            return {\r\n                \r\n            }\r\n\r\n        },\r\n        removeLastDigit: (state )=>{\r\n\r\n            return {\r\n                currentOperand: `${state.value.currrentOperand.slice(0, -1)}`\r\n            }\r\n    \r\n        }\r\n\r\n        \r\n\r\n    }\r\n   \r\n\r\n\r\n}) \r\n\r\n\r\nexport const {addDigit ,clearDigit ,removeLastDigit}= digitSlice.actions\r\n\r\n\r\nexport default digitSlice.reducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAgBA,MAAMC,YAAoB,GAAE;EAGpBC,eAAe,EAAC,EAHI;EAIpBC,WAAW,EAAC,EAJQ;EAKpBC,SAAS,EAAC;AALU,CAA5B;AAeA,OAAO,MAAMC,UAAU,GAAIL,WAAW,CAAC;EAEnCM,IAAI,EAAE,QAF6B;EAGnCL,YAHmC;EAKnCM,QAAQ,EAAC;IAELC,QAAQ,EAAC,CAACC,KAAD,EAASC,MAAT,KAAwC;MAC7C,IAAGD,KAAK,CAACP,eAAN,KAA0B,GAA1B,IAAgCQ,MAAM,CAACC,OAAP,KAAkB,GAArD,EAAyD;QACrD,OAAOF,KAAP;MAEH;;MACD,IAAGA,KAAK,CAACP,eAAN,CAAsBU,QAAtB,CAA+B,GAA/B,KAAwCF,MAAM,CAACC,OAAP,KAAkB,GAA7D,EAAiE;QAC7D,OAAOF,KAAP;MAEH;;MACL,OAAQ;QACAI,cAAc,EAAE,GAAEJ,KAAK,CAACK,KAAN,CAAYZ,eAAZ,IAA+B,EAAI,GAAEQ,MAAM,CAACC,OAAQ;MADtE,CAAR;IAGC,CAdI;IAgBLI,UAAU,EAAC,MAAI;MAEX,OAAO,EAAP;IAIH,CAtBI;IAuBLC,eAAe,EAAGP,KAAD,IAAU;MAEvB,OAAO;QACHI,cAAc,EAAG,GAAEJ,KAAK,CAACK,KAAN,CAAYZ,eAAZ,CAA4Be,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC,CAAyC;MADzD,CAAP;IAIH;EA7BI;AAL0B,CAAD,CAA/B;AA6CP,OAAO,MAAM;EAACT,QAAD;EAAWO,UAAX;EAAuBC;AAAvB,IAAyCX,UAAU,CAACa,OAA1D;AAGP,eAAeb,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}