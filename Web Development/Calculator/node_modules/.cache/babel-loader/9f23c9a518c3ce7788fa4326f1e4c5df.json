{"ast":null,"code":"import _slicedToArray from\"C:/Users/Fomonyuytar/Desktop/learning/calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//inbuit function to format number\nvar INTEGER_FORMATTER=new Intl.NumberFormat(\"en-us\",{maximumFractionDigits:0});//format our digits to have commas for thousands and tens of thousands\nexport var formatStringtoNumberWithComma=function formatStringtoNumberWithComma(currentDigit){if(currentDigit===\"\")return;var _currentDigit$split=currentDigit.split(\".\"),_currentDigit$split2=_slicedToArray(_currentDigit$split,2),integer=_currentDigit$split2[0],decimal=_currentDigit$split2[1];if(decimal==null)return INTEGER_FORMATTER.format(integer);return\"\".concat(INTEGER_FORMATTER.format(integer),\".\").concat(decimal);};","map":{"version":3,"names":["INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatStringtoNumberWithComma","currentDigit","split","integer","decimal","format"],"sources":["C:/Users/Fomonyuytar/Desktop/learning/calculator/src/utils/digitFormater.ts"],"sourcesContent":["\r\n  //inbuit function to format number\r\n  const INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\r\n    maximumFractionDigits: 0,\r\n  });\r\n\r\n    //format our digits to have commas for thousands and tens of thousands\r\n  export const formatStringtoNumberWithComma = (currentDigit: any) => {\r\n    if (currentDigit === \"\") return;\r\n    const [integer, decimal] = currentDigit.split(\".\");\r\n    if (decimal == null) return INTEGER_FORMATTER.format(integer);\r\n    return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\r\n  };"],"mappings":"sIACE;AACA,GAAMA,kBAAiB,CAAG,GAAIC,KAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CACvDC,qBAAqB,CAAE,CADgC,CAA/B,CAA1B,CAIE;AACF,MAAO,IAAMC,8BAA6B,CAAG,QAAhCA,8BAAgC,CAACC,YAAD,CAAuB,CAClE,GAAIA,YAAY,GAAK,EAArB,CAAyB,OACzB,wBAA2BA,YAAY,CAACC,KAAb,CAAmB,GAAnB,CAA3B,4DAAOC,OAAP,yBAAgBC,OAAhB,yBACA,GAAIA,OAAO,EAAI,IAAf,CAAqB,MAAOR,kBAAiB,CAACS,MAAlB,CAAyBF,OAAzB,CAAP,CACrB,gBAAUP,iBAAiB,CAACS,MAAlB,CAAyBF,OAAzB,CAAV,aAA+CC,OAA/C,EACD,CALM"},"metadata":{},"sourceType":"module"}