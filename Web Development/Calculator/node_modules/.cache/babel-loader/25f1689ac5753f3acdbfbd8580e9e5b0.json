{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentOperand: \"\"\n};\nexport const digitSlice = createSlice({\n  name: \"digits\",\n  initialState,\n  reducers: {\n    addDigit: (state, action) => {\n      state: state.currentOperand === '0' && action.payload === '0';\n\n      if (state.currentOperand.includes('.') && action.payload === '.') {\n        return state;\n      }\n\n      return {\n        currentOperand: `${state.currentOperand || \"\"}${action.payload}`\n      };\n    },\n    clearDigit: () => {\n      return {\n        currentOperand: \"\"\n      };\n    },\n    removeLastDigit: state => {\n      return {\n        currentOperand: `${state.currentOperand.slice(0, -1)}`\n      };\n    }\n  }\n});\nexport const {\n  addDigit,\n  clearDigit,\n  removeLastDigit\n} = digitSlice.actions;\nexport default digitSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentOperand","digitSlice","name","reducers","addDigit","state","action","payload","includes","clearDigit","removeLastDigit","slice","actions","reducer"],"sources":["C:/Users/Fomonyuytar/Desktop/learning/calculator/src/store/features/digitSlice.ts"],"sourcesContent":["import { createSlice ,PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState= {\r\n    currentOperand:\"\"\r\n}\r\n\r\n\r\n\r\nexport const digitSlice =  createSlice({\r\n\r\n    name :\"digits\",\r\n    initialState,\r\n    reducers:{\r\n        addDigit:(state ,action:PayloadAction<string>)=>{\r\n            state : state.currentOperand === '0'&& action.payload ==='0'\r\n\r\n            \r\n            if(state.currentOperand.includes('.')  && action.payload ==='.'){\r\n                return state;\r\n\r\n            }\r\n        return  {\r\n                currentOperand:`${state.currentOperand || \"\" }${action.payload}`\r\n            }\r\n        },\r\n        clearDigit:()=>{\r\n             \r\n            return {\r\n                currentOperand:\"\"\r\n            }\r\n\r\n        },\r\n        removeLastDigit: (state )=>{\r\n\r\n            return {\r\n                currentOperand: `${state.currentOperand.slice(0, -1)}`\r\n            }\r\n    \r\n        }\r\n\r\n    }\r\n   \r\n\r\n\r\n}) \r\n\r\n\r\nexport const {addDigit ,clearDigit ,removeLastDigit}= digitSlice.actions\r\n\r\n\r\nexport default digitSlice.reducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,MAAMC,YAAY,GAAE;EAChBC,cAAc,EAAC;AADC,CAApB;AAMA,OAAO,MAAMC,UAAU,GAAIH,WAAW,CAAC;EAEnCI,IAAI,EAAE,QAF6B;EAGnCH,YAHmC;EAInCI,QAAQ,EAAC;IACLC,QAAQ,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAuC;MAC5CD,KAAK,EAAGA,KAAK,CAACL,cAAN,KAAyB,GAAzB,IAA+BM,MAAM,CAACC,OAAP,KAAkB,GAAjD;;MAGR,IAAGF,KAAK,CAACL,cAAN,CAAqBQ,QAArB,CAA8B,GAA9B,KAAuCF,MAAM,CAACC,OAAP,KAAkB,GAA5D,EAAgE;QAC5D,OAAOF,KAAP;MAEH;;MACL,OAAQ;QACAL,cAAc,EAAE,GAAEK,KAAK,CAACL,cAAN,IAAwB,EAAI,GAAEM,MAAM,CAACC,OAAQ;MAD/D,CAAR;IAGC,CAZI;IAaLE,UAAU,EAAC,MAAI;MAEX,OAAO;QACHT,cAAc,EAAC;MADZ,CAAP;IAIH,CAnBI;IAoBLU,eAAe,EAAGL,KAAD,IAAU;MAEvB,OAAO;QACHL,cAAc,EAAG,GAAEK,KAAK,CAACL,cAAN,CAAqBW,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,CAAkC;MADlD,CAAP;IAIH;EA1BI;AAJ0B,CAAD,CAA/B;AAuCP,OAAO,MAAM;EAACP,QAAD;EAAWK,UAAX;EAAuBC;AAAvB,IAAyCT,UAAU,CAACW,OAA1D;AAGP,eAAeX,UAAU,CAACY,OAA1B"},"metadata":{},"sourceType":"module"}