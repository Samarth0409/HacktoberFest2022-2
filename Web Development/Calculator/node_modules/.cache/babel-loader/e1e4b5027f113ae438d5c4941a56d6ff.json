{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: {\n    currrentOperand: \"\",\n    prevOperand: \"\",\n    operation: \"\"\n  }\n};\nexport const digitSlice = createSlice({\n  name: \"digits\",\n  initialState,\n  reducers: {\n    addDigit: (state, action) => {\n      if (state.value.currrentOperand === '0' && action.payload === '0') {\n        returns;\n      }\n\n      if (state.value.currrentOperand.includes('.') && action.payload === '.') {\n        return state;\n      }\n\n      return {\n        currentOperand: `${state.value.currrentOperand || \"\"}${action.payload}`\n      };\n    },\n    clearDigit: () => {\n      return {\n        currentOperand: \"\"\n      };\n    },\n    removeLastDigit: state => {\n      return {\n        currentOperand: `${state.value.currrentOperand.slice(0, -1)}`\n      };\n    }\n  }\n});\nexport const {\n  addDigit,\n  clearDigit,\n  removeLastDigit\n} = digitSlice.actions;\nexport default digitSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","currrentOperand","prevOperand","operation","digitSlice","name","reducers","addDigit","state","action","payload","returns","includes","currentOperand","clearDigit","removeLastDigit","slice","actions","reducer"],"sources":["C:/Users/Fomonyuytar/Desktop/learning/calculator/src/store/features/digitSlice.ts"],"sourcesContent":["import { createSlice ,PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\ninterface digit{\r\n    currrentOperand:string;\r\n        prevOperand: string;\r\n        operation:string;\r\n    }\r\n\r\ninterface digitState{\r\n    value: digit\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState : digitState= {\r\n  \r\n    value:{\r\n        currrentOperand:\"\",\r\n        prevOperand:\"\",\r\n        operation:\"\"\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const digitSlice =  createSlice({\r\n\r\n    name :\"digits\",\r\n    initialState,\r\n\r\n    reducers:{\r\n\r\n        addDigit:(state , action:PayloadAction<string>)=>{\r\n            if(state.value.currrentOperand === '0'&& action.payload ==='0'){\r\n                returns;\r\n\r\n            }\r\n            if(state.value.currrentOperand.includes('.')  && action.payload ==='.'){\r\n                return state;\r\n\r\n            }\r\n        return  {\r\n                currentOperand:`${state.value.currrentOperand || \"\" }${action.payload}`\r\n            }\r\n        },\r\n        clearDigit:()=>{\r\n             \r\n            return {\r\n                currentOperand:\"\"\r\n            }\r\n\r\n        },\r\n        removeLastDigit: (state )=>{\r\n\r\n            return {\r\n                currentOperand: `${state.value.currrentOperand.slice(0, -1)}`\r\n            }\r\n    \r\n        }\r\n\r\n        \r\n\r\n    }\r\n   \r\n\r\n\r\n}) \r\n\r\n\r\nexport const {addDigit ,clearDigit ,removeLastDigit}= digitSlice.actions\r\n\r\n\r\nexport default digitSlice.reducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAmBA,MAAMC,YAAyB,GAAE;EAE7BC,KAAK,EAAC;IACFC,eAAe,EAAC,EADd;IAEFC,WAAW,EAAC,EAFV;IAGFC,SAAS,EAAC;EAHR;AAFuB,CAAjC;AAeA,OAAO,MAAMC,UAAU,GAAIN,WAAW,CAAC;EAEnCO,IAAI,EAAE,QAF6B;EAGnCN,YAHmC;EAKnCO,QAAQ,EAAC;IAELC,QAAQ,EAAC,CAACC,KAAD,EAASC,MAAT,KAAwC;MAC7C,IAAGD,KAAK,CAACR,KAAN,CAAYC,eAAZ,KAAgC,GAAhC,IAAsCQ,MAAM,CAACC,OAAP,KAAkB,GAA3D,EAA+D;QAC3DC,OAAO;MAEV;;MACD,IAAGH,KAAK,CAACR,KAAN,CAAYC,eAAZ,CAA4BW,QAA5B,CAAqC,GAArC,KAA8CH,MAAM,CAACC,OAAP,KAAkB,GAAnE,EAAuE;QACnE,OAAOF,KAAP;MAEH;;MACL,OAAQ;QACAK,cAAc,EAAE,GAAEL,KAAK,CAACR,KAAN,CAAYC,eAAZ,IAA+B,EAAI,GAAEQ,MAAM,CAACC,OAAQ;MADtE,CAAR;IAGC,CAdI;IAeLI,UAAU,EAAC,MAAI;MAEX,OAAO;QACHD,cAAc,EAAC;MADZ,CAAP;IAIH,CArBI;IAsBLE,eAAe,EAAGP,KAAD,IAAU;MAEvB,OAAO;QACHK,cAAc,EAAG,GAAEL,KAAK,CAACR,KAAN,CAAYC,eAAZ,CAA4Be,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC,CAAyC;MADzD,CAAP;IAIH;EA5BI;AAL0B,CAAD,CAA/B;AA4CP,OAAO,MAAM;EAACT,QAAD;EAAWO,UAAX;EAAuBC;AAAvB,IAAyCX,UAAU,CAACa,OAA1D;AAGP,eAAeb,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}